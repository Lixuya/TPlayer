apply plugin: 'com.android.application'
apply plugin: 'com.jakewharton.butterknife'

android {
    compileSdkVersion rootProject.setup.compileSdk
    buildToolsVersion rootProject.setup.buildTools

    defaultConfig {
        applicationId rootProject.setup.ID
        minSdkVersion rootProject.setup.minSdk
        targetSdkVersion rootProject.setup.targetSdk
        versionCode rootProject.setup.vcode
        versionName rootProject.setup.vname
        ndk {
            // 设置支持的SO库架构
            abiFilters 'armeabi' //, 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }
    }
    signingConfigs {
        def isRelease = gradle.startParameter.taskNames.any { it.contains('Release') }
        def path = isRelease ? properties.getProperty("keystore.path") : 'debug.keystore'
        def password = isRelease ? properties.getProperty("keystore.password") : ''
        def alias = isRelease ? properties.getProperty("keystore.alias") : ''
        myConfig {
            storeFile file(path)
            storePassword password
            keyAlias alias
            keyPassword password
        }
    }
    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['java']
            aidl.srcDirs = ['aidl']
            renderscript.srcDirs = ['rs']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
            jni.srcDirs = [];
            jniLibs.srcDirs = ['libs', 'jni']
        }
    }
    productFlavors {
        armv7 {
            ndk {
                abiFilter "armeabi-v7a"
            }
        }
        armv8 {
            ndk {
                abiFilter "armeabi-v7a"
            }
        }
        fat
    }
    lintOptions {
        abortOnError false
    }
    buildTypes {
        release {
            signingConfig signingConfigs.myConfig
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-android-optimize.pro'
        }
    }
    dataBinding {
        enabled = true
    }
}

repositories {
    flatDir {
        dirs 'libs'
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    //
    compile 'com.tencent.bugly:crashreport:latest.release'
    //
    compile 'com.jakewharton:butterknife:8.4.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.4.0'
    //
    compile "com.android.support:appcompat-v7:$rootProject.versions.supportLib"
    compile "com.android.support:cardview-v7:$rootProject.versions.supportLib"
    compile "com.android.support:design:$rootProject.versions.supportLib"
    //
    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'com.jcodecraeer:xrecyclerview:1.3.2'
    //
    compile 'com.mikepenz:iconics-core:2.8.1@aar'
    compile 'com.mikepenz:google-material-typeface:2.2.0.3.original@aar'
    compile 'com.mikepenz:material-design-iconic-typeface:2.2.0.2@aar'
    compile 'com.mikepenz:fontawesome-typeface:4.7.0.0@aar'
    //
    compile 'com.google.dagger:dagger:2.8'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.8'
    //
    compile project(':lib-gvr')
//  compile project(':libsocket')
}